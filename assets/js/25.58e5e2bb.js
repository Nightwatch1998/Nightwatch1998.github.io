(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{309:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker的容器、镜像与数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker的容器、镜像与数据卷"}},[t._v("#")]),t._v(" Docker的容器、镜像与数据卷")]),t._v(" "),s("h2",{attrs:{id:"docker概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker概述"}},[t._v("#")]),t._v(" Docker概述")]),t._v(" "),s("h3",{attrs:{id:"docker为什么出现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker为什么出现"}},[t._v("#")]),t._v(" Docker为什么出现")]),t._v(" "),s("p",[t._v("一款产品从应用到上线，需要配置负复杂的运行环境，需要考虑不同版本环境的兼容，而且不能跨平台，移植到另一台服务器又得重新配置一遍。")]),t._v(" "),s("p",[t._v("Docker通过镜像将应用程序所需的系统环境进行打包，解决环境配置的诸多问题。")]),t._v(" "),s("p",[t._v("Docker将应用程序运行在容器上，而容器在任何操作系统上都是一致的，这就实现了跨平台、跨服务器。“一次封装、到处运行”。")]),t._v(" "),s("p",[t._v("在容器技术出现之前，业界网红是"),s("strong",[t._v("虚拟机")]),t._v("。虚拟机的代表，是"),s("strong",[t._v("VMWare")]),t._v("和"),s("strong",[t._v("OpenStack")]),t._v("。虚拟机技术是虚拟出一套硬件之后，在其上运行一个完整的操作系统，在操作系统上再运行所需应用。")]),t._v(" "),s("p",[s("strong",[t._v("Docker和虚拟机的区别？")])]),t._v(" "),s("ul",[s("li",[t._v("虚拟机占用资源多，冗余步骤多，启动慢")]),t._v(" "),s("li",[t._v("容器内的应用直接运行于宿主机内核，容器没有自己的内核，也没有硬件虚拟，因此更为轻便。")]),t._v(" "),s("li",[t._v("每个容器相互隔离，每个容器有自己的文件系统，容器间进程不会互相影响，能区分计算资源。")])]),t._v(" "),s("h3",{attrs:{id:"docker能干嘛"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker能干嘛"}},[t._v("#")]),t._v(" Docker能干嘛")]),t._v(" "),s("ul",[s("li",[t._v("更快的应用交付和部署")]),t._v(" "),s("li",[t._v("更便捷的升级和扩容")]),t._v(" "),s("li",[t._v("更简单的系统运维")]),t._v(" "),s("li",[t._v("更高效的计算资源利用")])]),t._v(" "),s("h2",{attrs:{id:"docker安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[t._v("#")]),t._v(" Docker安装")]),t._v(" "),s("h3",{attrs:{id:"centos7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos7"}},[t._v("#")]),t._v(" Centos7")]),t._v(" "),s("p",[t._v("这里使用了腾讯云个人用户1个月试用的云服务器")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/guides/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网地址"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("安装：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step 1: 安装必要的一些系统工具  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" yum-utils device-mapper-persistent-data lvm2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 2: 添加添加阿里云镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s+download.docker.com+mirrors.aliyun.com/docker-ce+'")]),t._v(" /etc/yum.repos.d/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 4: 更新并安装Docker-CE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum makecache fast  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 5: 开启Docker服务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" start\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 6: 检查是否安装成功")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" version\n")])])]),s("p",[t._v("卸载：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum remove docker-ce\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" /var/lib/docker\n")])])]),s("blockquote",[s("p",[t._v("说明：")]),t._v(" "),s("ul",[s("li",[t._v("yum-utils管理yum配置和存储库,device-mapper-persistent-data用于逻辑卷管理，lvm2用于动态调整磁盘分区大小")])])]),t._v(" "),s("h3",{attrs:{id:"腾讯云镜像加速"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#腾讯云镜像加速"}},[t._v("#")]),t._v(" 腾讯云镜像加速")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/document/product/1141/63910",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器镜像服务个人版使用说明"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login ccr.ccs.tencentyun.com "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--username")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxxxxxxxxxx\n")])])]),s("p",[t._v("执行以下命令，打开 "),s("code",[t._v("/etc/docker/daemon.json")]),t._v(" 配置文件。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/docker/daemon.json\n")])])]),s("p",[t._v("按 "),s("strong",[t._v("i")]),t._v(" 切换至编辑模式，添加以下内容，并保存。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirror.ccs.tencentyun.com"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("执行以下命令，重启 Docker 即可。示例命令以 CentOS 7 为例。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),s("p",[t._v("查看镜像仓库地址")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" info\n")])])]),s("h2",{attrs:{id:"docker镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像"}},[t._v("#")]),t._v(" Docker镜像")]),t._v(" "),s("h3",{attrs:{id:"镜像是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像是什么"}},[t._v("#")]),t._v(" 镜像是什么")]),t._v(" "),s("p",[t._v("镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。")]),t._v(" "),s("h3",{attrs:{id:"镜像加载原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像加载原理"}},[t._v("#")]),t._v(" 镜像加载原理")]),t._v(" "),s("p",[t._v("UnionFS（联合文件系统）：")]),t._v(" "),s("ul",[s("li",[t._v("Union文件系统（UnionFS）是一种"),s("strong",[t._v("分层、轻量级并且高性能")]),t._v("的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下(unite several directories into a single virtual ﬁlesystem)。")]),t._v(" "),s("li",[t._v("Union 文件系统是 Docker 镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。")]),t._v(" "),s("li",[t._v("特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录.")])]),t._v(" "),s("p",[t._v("Docker镜像加载原理：")]),t._v(" "),s("ul",[s("li",[t._v("docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统"),s("code",[t._v("UnionFS")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("bootfs")]),t._v("(boot ﬁle system)主要包含bootloader和kernel, bootloader主要是引导加载kernel, Linux启动时，bootfs被加载到内存，提供启动内核所需的文件。启动完成后，系统会从bootfs切换到rootfs，并卸载bootfs。")]),t._v(" "),s("li",[s("code",[t._v("rootfs")]),t._v(" (root ﬁle system) ，在bootfs之上。包含的就是典型 Linux 系统中的 /dev, /proc, /bin, /etc 等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。")])]),t._v(" "),s("p",[t._v("平时安装虚拟机和centos都是好几个G，为什么Docker这里只需要200M？")]),t._v(" "),s("ul",[s("li",[t._v("对于一个精简的OS，rootfs可以很小，只需要包含最基本的命令，工具和程序库就可以了，因为底层直接用Host的kernel，自己只需要提供rootfs就好了。对于不同的linux发行版，bootfs基本是一致的，rootfs会有差别，因此不同的发行版可以共用bootfs。")])]),t._v(" "),s("blockquote",[s("p",[t._v("什么是bootfs和rootfs?")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("bootfs")]),t._v(" Linux 操作系统启动时最早加载的文件系统，通常包含内核映像（Kernel Image）和初始的 RAM 文件系统。")]),t._v(" "),s("li",[s("code",[t._v("rootfs")]),t._v(" 是 Linux 系统的根文件系统，包含了操作系统运行所需的所有文件。它包括 "),s("code",[t._v("/bin")]),t._v("、"),s("code",[t._v("/lib")]),t._v("、"),s("code",[t._v("/etc")]),t._v("、"),s("code",[t._v("/dev")]),t._v(" 等目录，以及应用程序和用户数据。")])])]),t._v(" "),s("h3",{attrs:{id:"分层理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分层理解"}},[t._v("#")]),t._v(" 分层理解")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull redis")]),t._v("\nUsing default tag: latest\nlatest: Pulling from library/redis\ne4fff0779e6d: Already exists  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重复的层不会再下载")]),t._v("\nd1dde3db2ec5: Pull complete\n1d321a003dde: Pull complete\nd65aedb2f012: Pull complete\n4018f93716a2: Pull complete\nb0967b02e8cf: Pull complete\n4f4fb700ef54: Pull complete\nd288b86f5d06: Pull complete\nDigest: sha256:878983f8f5045b28384fc300268cec62bca3b14d5e1a448bec21f28cfcc7bf78\nStatus: Downloaded newer image "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" redis:latest\ndocker.io/library/redis:latest\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("思考：为什么Docker镜像要采用这种分层的结构呢？")]),t._v("\n最大的好处，我觉得莫过于是资源共享了！比如有多个镜像都从相同的Base镜像构建而来，那么宿主机\n只需在磁盘上保留一份base镜像，同时内存中也只需要加载一份base镜像，这样就可以为所有的容器服\n务了，而且镜像的每一层都可以被共享。")])]),t._v(" "),s("p",[t._v("所有的 Docker 镜像都起始于一个"),s("strong",[t._v("基础镜像层")]),t._v("，当进行修改或增加新的内容时，就会在当前镜像层之\n上，创建新的镜像层。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://stag-blog.oss-cn-beijing.aliyuncs.com/picture/%E9%95%9C%E5%83%8F%E5%88%86%E5%B1%82.png",alt:"镜像分层"}})]),t._v(" "),s("p",[t._v("Docker 通过存储引擎（新版本采用快照机制）的方式来实现镜像层堆栈，并保证多镜像层对外展示为统\n一的文件系统。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://stag-blog.oss-cn-beijing.aliyuncs.com/picture/%E9%95%9C%E5%83%8F%E7%9A%84%E4%BF%AE%E6%94%B9%E5%B1%82.png",alt:"镜像的修改层"}})]),t._v(" "),s("p",[t._v("这种情况下，上层镜像层中的文件覆盖了底层镜像层中的文件。这样就使得文件的更新版本作为一个新\n镜像层添加到镜像当中。")]),t._v(" "),s("p",[t._v("存储引擎：")]),t._v(" "),s("ul",[s("li",[t._v("Linux 上可用的存储引擎有 AUFS、Overlay2、Device Mapper、Btrfs 以及 ZFS。顾名思义，每种存储引擎都基于 Linux 中对应的文件系统或者块设备技术，并且每种存储引擎都有其独有的性能特点。")]),t._v(" "),s("li",[t._v("Windows 上仅支持 windowsﬁlter 一种存储引擎，该引擎基于 NTFS 文件系统之上实现了分层。")])]),t._v(" "),s("p",[t._v("下图展示了与系统显示相同的三层镜像。所有镜像层堆叠并合并，对外提供统一的视图。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://stag-blog.oss-cn-beijing.aliyuncs.com/picture/%E9%95%9C%E5%83%8F%E7%BB%9F%E4%B8%80%E8%A7%86%E5%9B%BE.png",alt:"镜像统一视图"}})]),t._v(" "),s("blockquote",[s("p",[t._v("Docker镜像都是只读的，当容器启动时，一个新的"),s("strong",[t._v("可写层")]),t._v("被加载到镜像的顶部！")]),t._v(" "),s("p",[t._v("这一层就是我们的容器层，容器层之下都叫镜像层。")])]),t._v(" "),s("h3",{attrs:{id:"镜像commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像commit"}},[t._v("#")]),t._v(" 镜像commit")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" commit 提交容器成为一个新的本地镜像\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令和git原理类似")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"描述信息"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"作者"')]),t._v(" 容器id 目标镜像名："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("实战测试：官方的tomcat的webapps目录下是空的，我们可以自己制作一个镜像，让它包含初始内容")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动默认的tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" tomcat01 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4396")]),t._v(":8080 tomcat:9.0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" tomcat01 /bin/bash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制webapps")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" webapps.dist/* webapps\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" restart tomcat01\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit 提交镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# docker commit -m="add webapps" -a="huyadish" 6525ee04867f tomcat02:1.0')]),t._v("\nsha256:eea1dcc18db2ebe7b6d88abac28e793d8df457deb76fb99473b97053f28d66cb\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看tomcat02比tomcat 大了一点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker images")]),t._v("\nREPOSITORY            TAG       IMAGE ID       CREATED          SIZE\ntomcat02              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("       eea1dcc18db2   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" seconds ago   468MB\ntomcat                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.0")]),t._v("       90717097970a   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" days ago      463MB\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动新的tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -d -p 4396:8080 tomcat02:1.0")]),t._v("\n")])])]),s("p",[t._v("学习方式思考：先简单理解概念，再动手实践，最后实践和理论结合一次性搞定这个知识")]),t._v(" "),s("p",[t._v("到这里才算入门docker")]),t._v(" "),s("h2",{attrs:{id:"容器数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器数据卷"}},[t._v("#")]),t._v(" 容器数据卷")]),t._v(" "),s("h3",{attrs:{id:"什么是容器数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是容器数据卷"}},[t._v("#")]),t._v(" 什么是容器数据卷")]),t._v(" "),s("p",[t._v("如果数据都在容器中，那么删除容器数据就会丢失！需求："),s("strong",[t._v("数据可以持久化")])]),t._v(" "),s("p",[t._v("MySQL，容器删了同时也删除了数据库！需求："),s("strong",[t._v("Mysql数据可以存储在本地！")])]),t._v(" "),s("p",[t._v("卷技术可以通过目录的挂载，将容器内目录，挂载到Linux上。多个容器之间数据可以共享！")]),t._v(" "),s("h3",{attrs:{id:"使用数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用数据卷"}},[t._v("#")]),t._v(" 使用数据卷")]),t._v(" "),s("ul",[s("li",[t._v("使用命令来挂载")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -v 宿主机目录:容器目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" /home/test:/home centos /bin/bash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动后通过docker inspect 查看容器详细信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" inspect e6512dddaf3f\n")])])]),s("p",[t._v("执行之后宿主机的"),s("code",[t._v("/home/test")]),t._v("目录会和容器的"),s("code",[t._v("/home")]),t._v("目录，双向同步")]),t._v(" "),s("p",[t._v("即使容器关了，修改宿主机目录内容，重新打开容器，对应目录内容同样会更新")]),t._v(" "),s("h3",{attrs:{id:"实战-安装mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-安装mysql"}},[t._v("#")]),t._v(" 实战：安装MySQL")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull mysql:8.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动mysql")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 后台运行\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" 端口映射\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" 目录挂载  宿主机目录:容器目录  可以使用多个 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" 设置环境\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -d -p 3306:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql8.0 mysql:8.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 宿主机产生了对应目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls /home/mysql")]),t._v("\nconf  data\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动成功后开启3306端口，并通过远程navicat连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ufw allow 3306")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看宿主机目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /home/mysql/data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nauto.cnf       binlog.index  client-cert.pem    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ib_16384_1.dblwr  ibtmp1        mysql       performance_schema  server-cert.pem  undo_001")]),t._v("\nbinlog.000001  ca-key.pem    client-key.pem     ib_buffer_pool     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#innodb_redo  mysql.ibd   private_key.pem     server-key.pem   undo_002")]),t._v("\nbinlog.000002  ca.pem        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ib_16384_0.dblwr  ibdata1            #innodb_temp  mysql.sock  public_key.pem      sys")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# navicat中创建test数据库")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次查看 发现多了test数据库")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nauto.cnf       binlog.index  client-cert.pem    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ib_16384_1.dblwr  ibtmp1        mysql       performance_schema  server-cert.pem  test")]),t._v("\nbinlog.000001  ca-key.pem    client-key.pem     ib_buffer_pool     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#innodb_redo  mysql.ibd   private_key.pem     server-key.pem   undo_001")]),t._v("\nbinlog.000002  ca.pem        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ib_16384_0.dblwr  ibdata1            #innodb_temp  mysql.sock  public_key.pem      sys              undo_002")]),t._v("\n\n")])])]),s("p",[t._v("假设将容器删除，本地的数据不会丢失")]),t._v(" "),s("h3",{attrs:{id:"具名和匿名挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具名和匿名挂载"}},[t._v("#")]),t._v(" 具名和匿名挂载")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匿名挂载  -v 容器内路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" nginx01 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" /etc/nginx nginx\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有的卷的情况")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker volume ls")]),t._v("\nDRIVER    VOLUME NAME\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("     2da55574a37b01a128232cf449171dc6c24b8467a3229c87a3f629e8e10764ab\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("     615a8c9be191c64c440449cb995769c2b26118a523e572dc2e7eecdc7f85dde9\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 具名挂载 -v 卷名:容器内路径")]),t._v("\nroot@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -P -d --name nginx02 -v volume01:/etc/nginx nginx")]),t._v("\n67726065cc8668f6c7f067955bbd14ba78908794538cfff23c452f79b3cc529c\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到我们命名的卷volume01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker volume ls")]),t._v("\nDRIVER    VOLUME NAME\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("     2da55574a37b01a128232cf449171dc6c24b8467a3229c87a3f629e8e10764ab\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("     615a8c9be191c64c440449cb995769c2b26118a523e572dc2e7eecdc7f85dde9\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("     volume01\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看卷的位置 docker volume inspect 卷名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker volume inspect volume01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CreatedAt"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2024-08-19T15:12:34+08:00"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Driver"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Labels"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" null,\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mountpoint"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/docker/volumes/volume01/_data"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume01"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Options"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" null,\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Scope"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("所有docker容器内的卷，没有指定目录的情况下都是在宿主机的"),s("code",[t._v("/var/lib/docker/volumes/xxxxx/_data")])]),t._v(" "),s("p",[t._v("通过具名挂载可以方便得找到卷，大多数情况使用"),s("code",[t._v("具名挂载")])]),t._v(" "),s("p",[t._v("拓展：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过 -v 容器内路径:ro rw 改变读写权限")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ro readonly 只读")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rw readwrite 读写，默认值")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置了ro 容器内部就不能改变卷了，只能通过宿主机操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" nginx02 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" volume01:/etc/nginx:ro nginx\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" nginx02 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" volume01:/etc/nginx:rw nginx\n")])])]),s("h3",{attrs:{id:"初识dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识dockerfile"}},[t._v("#")]),t._v(" 初识DockerFile")]),t._v(" "),s("p",[t._v("DockerFile就是用来构建Docker镜像的脚本文件。")]),t._v(" "),s("p",[t._v("通过脚本可以生成镜像，镜像是分层的，脚本是一个个的命令，每个命令都是一层！")]),t._v(" "),s("ul",[s("li",[t._v("编辑dockerfile")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个dockerfile文件，明明建议dockerfile")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件内容 指令(大写) 参数")]),t._v("\nFROM centos\n\nVOLUME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume01"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"volume02"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nCMD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"---end---"')]),t._v("\n\nCMD /bin/bash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的每个命令都是镜像的一层")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用dockerfile生成镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos docker-test-volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker build -f dockerfile1  -t huyadish/centos:1.0 .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Building "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".2s "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("/5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" FINISHED                  \n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("internal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" load build definition from dockerfile1\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" transferring dockerfile: 117B\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("internal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" load metadata "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" docker.io/library/centos:latest\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("internal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" load .dockerignore\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" transferring context: 2B\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" FROM docker.io/library/centos:latest\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exporting to image\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exporting layers\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" writing image sha256:2771b5374df0a3d1fec5d343805c3291ee35f76cf68d2b731a421cb308eae93f\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" naming to docker.io/huyadish/centos:1.0\n \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看生成的镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos docker-test-volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker images")]),t._v("\nREPOSITORY            TAG       IMAGE ID       CREATED         SIZE\ncentos                latest    5d0da3dc9764   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" years ago     231MB\nhuyadish/centos       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("       2771b5374df0   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" years ago     231MB\n")])])]),s("ul",[s("li",[t._v("使用自定义镜像运行容器")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -it --name mycentos 2771b5374df0 /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到容器已自动生成了数据卷 volume01  volume02")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@6a9e1fc9d112 /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  volume01  volume02\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@6a9e1fc9d112 /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd volume01/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@6a9e1fc9d112 volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch container.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@6a9e1fc9d112 volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\ncontainer.txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@6a9e1fc9d112 volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看启动的容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps -a")]),t._v("\nCONTAINER ID   IMAGE          COMMAND       CREATED         STATUS                     PORTS     NAMES\n6a9e1fc9d112   2771b5374df0   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" minutes ago   Exited "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" minutes ago             mycentos\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拖过容器ID查看 详细信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker inspect 6a9e1fc9d112")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到volume01 的在宿主机的地址 /var/lib/docker/volumes/b3aeb4aa984abf2b69288b41cd9ef90bc124e22d6af75561f1cb3ddcabdfef2f/_data")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入数据卷默认路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /var/lib/docker/volumes/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入volume01 路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd b3aeb4aa984abf2b69288b41cd9ef90bc124e22d6af75561f1cb3ddcabdfef2f/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos b3aeb4aa984abf2b69288b41cd9ef90bc124e22d6af75561f1cb3ddcabdfef2f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd _data/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到创建的测试文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos _data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\ncontainer.txt\n")])])]),s("h3",{attrs:{id:"数据卷容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[t._v("#")]),t._v(" 数据卷容器")]),t._v(" "),s("p",[t._v("多个mysql 同步数据")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动centos01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos _data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -it --name centos01 huyadish/centos:1.0 /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动centos02 通过--volumes-from 将数据卷绑定到centos01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos _data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -it --name centos02 --volumes-from centos01  huyadish/centos:1.0 /bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在外部查看运行状况")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps")]),t._v("\nCONTAINER ID   IMAGE                 COMMAND                  CREATED              STATUS              PORTS     NAMES\n2d381d6ee79c   huyadish/centos:1.0   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh -c /bin/bash"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),t._v(" seconds ago       Up "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" seconds                 centos02\n2b8a31b8f8ee   huyadish/centos:1.0   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("              About a minute ago   Up About a minute             centos01\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入centos01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-20-7-centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker attach 2b8a31b8f8ee")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  volume01  volume02\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd volume01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建测试文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch rong.java")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2b8a31b8f8ee volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nrong.java\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入centos02")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2d381d6ee79c /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd volume01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@2d381d6ee79c volume01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nrong.java\n\n")])])]),s("p",[t._v("因为centos01和centos02的数据卷对应宿主机的同一个位置")]),t._v(" "),s("p",[t._v("centos01和centos02对宿主机的数据卷是共享拷贝机制，即使删除centos01，centos02的数据依然在")])])}),[],!1,null,null,null);s.default=n.exports}}]);