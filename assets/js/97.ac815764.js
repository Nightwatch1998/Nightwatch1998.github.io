(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{391:function(t,s,a){"use strict";a.r(s);var e=a(10),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是mvvm、mvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvvm、mvc"}},[t._v("#")]),t._v(" 什么是MVVM、MVC？")]),t._v(" "),s("h3",{attrs:{id:"什么是mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvvm"}},[t._v("#")]),t._v(" 什么是MVVM？")]),t._v(" "),s("p",[t._v("Model:模型代表真实状态内容的领域对象模型，内容的数据访问层")]),t._v(" "),s("p",[t._v("View:视图使用户在屏幕上看到德结构、布局和外观")]),t._v(" "),s("p",[t._v("ViewModel：视图模型，绑定器在视图和数据绑定器之间进行通信；渲染页面，监听页面变化")]),t._v(" "),s("p",[t._v("优点：低耦合、可重用、独立开发")]),t._v(" "),s("h3",{attrs:{id:"mvc与mvvm区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc与mvvm区别"}},[t._v("#")]),t._v(" MVC与MVVM区别")]),t._v(" "),s("ul",[s("li",[t._v("MVC的controller演变成了viewmodel")]),t._v(" "),s("li",[t._v("MVVM通过数据来显示视图层，而不是DOM操作")]),t._v(" "),s("li",[t._v("主要解决了MVC中大量的DOM操作使页面渲染性能降低，加载速度变慢")])]),t._v(" "),s("h2",{attrs:{id:"为什么data是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么data是一个函数"}},[t._v("#")]),t._v(" 为什么data是一个函数")]),t._v(" "),s("p",[t._v("组件的data写成一个函数，数据以函数值形式返回。这样每复用一次，类似于给组件分配了一个私有的数据空间，让各个组件实例维护各自的数据。")]),t._v(" "),s("p",[t._v("如果是一个对象的话，组件实例化的时候会被共享，导致数据干扰")]),t._v(" "),s("h2",{attrs:{id:"vue组件通讯方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue组件通讯方式"}},[t._v("#")]),t._v(" Vue组件通讯方式")]),t._v(" "),s("ul",[s("li",[t._v("props和$emit。父传子通过props传递，子传父通过$emit触发事件实现")]),t._v(" "),s("li",[t._v("$parent 和 $children。$parent获取父组件，$children获取子组件列表")]),t._v(" "),s("li",[t._v("$attrs 和 $listeners。$attrs传递非prop属性, $listeners传递父组件的事件；"),s("button",t._g(t._b({},"button",t.$attrs,!1),t.$listeners))]),t._v(" "),s("li",[t._v("provide和inject。可以从祖先传递到子孙组件")]),t._v(" "),s("li",[t._v("$refs获取组件实例")]),t._v(" "),s("li",[t._v("vuex状态管理")])]),t._v(" "),s("h2",{attrs:{id:"vue生命周期有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期有哪些"}},[t._v("#")]),t._v(" Vue生命周期有哪些？")]),t._v(" "),s("p",[t._v("数据观测data observe是指vue如何监听组件中的数据变化，通过Object.defineProperty和Proxy两种技术实现")]),t._v(" "),s("p",[t._v("vue中每个组件有一个与之关联的watcher，它会监听组件的数据变化。数据发生变化时，vue会通知与之关联的watcher重新计算组件中的数据，并更新相应的视图。")]),t._v(" "),s("ul",[s("li",[t._v("beforeCreate:在实例化之后，数据观测和event/watcher事件配置之前。"),s("strong",[t._v("初始化数据、引入插件")])]),t._v(" "),s("li",[t._v("created:实例创建完成后被调用，已完成"),s("strong",[t._v("数据观测")]),t._v("、属性和方法的运算、watch/event事件回调。"),s("strong",[t._v("数据获取、初始化事件")])]),t._v(" "),s("li",[t._v("beforeMount:挂载之前，相关的render函数首次调用。"),s("strong",[t._v("对模板进行最后修改")])]),t._v(" "),s("li",[t._v("mounted:挂载之后，"),s("strong",[t._v("真实的DOM挂载完毕")]),t._v("，数据完成双向绑定，可以访问得到DOM节点。"),s("strong",[t._v("进行dom操作、调用第三方库等")])]),t._v(" "),s("li",[t._v("beforeUpdate:数据更新时调用，发生在虚拟DOM重新渲染之前。在这个钩子中进一步更改状态，不会触发重新渲染过程")]),t._v(" "),s("li",[t._v("updated:更新完成之后，当前的DOM已经更新完成，需要避免在此期间更新数据。")]),t._v(" "),s("li",[t._v("beforeDestory:实例销毁之前，可以进行善后工作，例如清除定时器")]),t._v(" "),s("li",[t._v("destoryed：Vue实例被销毁后，vue实例指向的东西会被解绑，事件监听器会被移除，子实例会被销毁。")])]),t._v(" "),s("p",[t._v("异步请求可以在created、beforeMount、mounted中进行，这时data已经创建")]),t._v(" "),s("p",[t._v("不依赖dom时建议在created中使用，依赖的话建议在mounted中使用。")]),t._v(" "),s("h2",{attrs:{id:"v-if和v-show的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-show的区别"}},[t._v("#")]),t._v(" v-if和v-show的区别")]),t._v(" "),s("ul",[s("li",[t._v("v-if在编译过程会被转化为三元表达式，条件不满足时不渲染。销毁重建控制是否显示")]),t._v(" "),s("li",[t._v("v-show会被编译为指令，条件不满足时将节点隐藏。"),s("strong",[t._v("适用于需要频繁切换的场景")])])]),t._v(" "),s("p",[t._v("扩展补充:")]),t._v(" "),s("ul",[s("li",[t._v("display:none  隐藏后不占位置，不会被子元素继承，无法触发事件")]),t._v(" "),s("li",[t._v("visibility:hidden无法触发事件")]),t._v(" "),s("li",[t._v("opacity:0可以触发事件，过渡动画有效")])]),t._v(" "),s("h2",{attrs:{id:"vue的内置指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的内置指令"}},[t._v("#")]),t._v(" vue的内置指令")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("v-once 仅渲染组件一次，并跳过之后的更新")])]),t._v(" "),s("li",[s("p",[t._v("v-bind 绑定属性")])]),t._v(" "),s("li",[s("p",[t._v("v-on 绑定事件")])]),t._v(" "),s("li",[s("p",[t._v("v-cloak 解决初始化慢到页面闪动的问题")])]),t._v(" "),s("li",[s("p",[t._v("v-html 将html字符串转化为真正的html元素，有可能导致XSS")])]),t._v(" "),s("li",[s("p",[t._v("v-show 通过display进行显示隐藏")])]),t._v(" "),s("li",[s("p",[t._v("v-if/v-else/v-else-if 条件渲染")])]),t._v(" "),s("li",[s("p",[t._v("v-for 比v-if优先级高")])]),t._v(" "),s("li",[s("p",[t._v("v-model 表单和实例数据双向绑定")])])]),t._v(" "),s("h2",{attrs:{id:"怎样理解vue的单项数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎样理解vue的单项数据流"}},[t._v("#")]),t._v(" 怎样理解Vue的单项数据流")]),t._v(" "),s("p",[t._v("数据总是从父组件传递到子组件，子组件没有权利修改父组件传来的数据，只能请求父组件对原始数据进行修改")]),t._v(" "),s("p",[t._v("实现：")]),t._v(" "),s("ul",[s("li",[t._v("利用get set方法")]),t._v(" "),s("li",[t._v("watch监听数据变化，触发$emit函数")])]),t._v(" "),s("h2",{attrs:{id:"vue2-响应式数据的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2-响应式数据的原理"}},[t._v("#")]),t._v(" vue2 响应式数据的原理")]),t._v(" "),s("p",[t._v("整体思路是"),s("strong",[t._v("数据劫持+观察者模式e")])]),t._v(" "),s("ol",[s("li",[t._v("vue2的响应式数据基于Object.defineProperty()实现。当一个Vue实例被创建时，Vue会递归遍历数据对象，为每个属性添加getter和setter方法。")]),t._v(" "),s("li",[t._v("其中getter会返回属性的值，而setter方法会在属性值被修改时触发。在setter方法中，vue会通知所有的watcher对象，让他们更新视图，从而实现响应式变化。")]),t._v(" "),s("li",[t._v("Object.defineProperty只能劫持对象的属性，如果要监听数组或对象内部的变化，则需要对每个元素进行遍历。")])]),t._v(" "),s("p",[t._v("具体的架构：")]),t._v(" "),s("ul",[s("li",[t._v("Observer 劫持所有监听属性，属性变化了要通知Watcher")]),t._v(" "),s("li",[t._v("Dep 订阅器，因为订阅者有多个，因此需要专门收集订阅者。在监听器Observer和订阅者Watcher之间"),s("strong",[t._v("统一管理")])]),t._v(" "),s("li",[t._v("Watcher 观察者，添加订阅者，通知更新视图")]),t._v(" "),s("li",[t._v("Compile 指令解析器，对每个节点进行扫描和解析，将相关指令初始化成一个Watcher。并且初始化模板数据")]),t._v(" "),s("li",[t._v("Updater 更新视图")])]),t._v(" "),s("h2",{attrs:{id:"vue中数据双向绑定的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中数据双向绑定的原理"}},[t._v("#")]),t._v(" vue中数据双向绑定的原理")]),t._v(" "),s("p",[t._v("vue数据双向绑定是通过响应式系统和指令实现的。当视图中表单元素的数据发生变化时，会触发对应的事件，通过"),s("strong",[t._v("指令")]),t._v("将表单数据更新到对应的数据上。当数据发生变化时，通过"),s("strong",[t._v("数据响应式系统")]),t._v("，将数据的变化反映在视图中。")]),t._v(" "),s("h2",{attrs:{id:"vue如何检测数组变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue如何检测数组变化"}},[t._v("#")]),t._v(" Vue如何检测数组变化")]),t._v(" "),s("p",[t._v("vue将data中的数组进行了原型链重写，指向了自己定义的数组原型方法。这样可以"),s("strong",[t._v("通知依赖更新")]),t._v("，如果数组中包含着引用类型，会对数组的引用类型"),s("strong",[t._v("再次递归便利进行监控")]),t._v("。这样就实现了监控数组变化。")]),t._v(" "),s("p",[t._v("有两种情况无法检测数组变化：")]),t._v(" "),s("ul",[s("li",[t._v("当利用索引直接设置一个数组项。解决办法使用vm.$set方法")]),t._v(" "),s("li",[t._v("当修改数组的长度时")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用该方法进行更新视图")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vm.$set，Vue.set的一个别名")]),t._v("\n \nvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" indexOfItem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue的父子组件生命周期钩子函数执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的父子组件生命周期钩子函数执行顺序"}},[t._v("#")]),t._v(" Vue的父子组件生命周期钩子函数执行顺序")]),t._v(" "),s("p",[s("strong",[t._v("加载渲染过程")])]),t._v(" "),s("p",[t._v("父beforeCreate->父created->父beforeMount->子beforeCreated->子created->子beforeMount->子mounted->父mounted")]),t._v(" "),s("p",[s("strong",[t._v("子组件更新过程")])]),t._v(" "),s("p",[t._v("父beforeUpdate->子beforeUpdate->子updated->父updated")]),t._v(" "),s("p",[s("strong",[t._v("父组件更新过程")])]),t._v(" "),s("p",[s("strong",[t._v("销毁过程")])]),t._v(" "),s("p",[t._v("除了创建，挂载、更新、销毁都要等到子组件完成，父组件才能进行")]),t._v(" "),s("h2",{attrs:{id:"v-model语法糖原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model语法糖原理"}},[t._v("#")]),t._v(" v-model语法糖原理")]),t._v(" "),s("p",[t._v("v-modal是vue.js的一个指令，用于在表单元素和组件实现双向数据绑定。")]),t._v(" "),s("p",[t._v("v-model本质就是value+input方法的语法糖，根据不同的标签生成不同的v-on事件和v-bind属性")]),t._v(" "),s("ul",[s("li",[t._v("text/textarea输入框：value属性和input事件")]),t._v(" "),s("li",[t._v("checkbox复选框：checked属性和change事件")]),t._v(" "),s("li",[t._v("select单选框:value和change事件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 文本输入框 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkbox"')]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checked"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 复选框 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"radio"')]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"picked"')]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 单选框 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue3响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3响应式原理"}},[t._v("#")]),t._v(" Vue3响应式原理")]),t._v(" "),s("p",[t._v("使用Proxy的原因：")]),t._v(" "),s("ul",[s("li",[t._v("Object.defineProperty()无法监控数组的下标变化，数组下标添加元素不能实时响应。Proxy可以拦截对象的所有操作，监听数组的变化、动态添加属性。")]),t._v(" "),s("li",[t._v("Object.defineProperty()对每个属性单独劫持，属性较多时影响性能。Proxy可以劫持整个对象，并返回一个新对象。")])]),t._v(" "),s("p",[t._v("Reflect避免了对对象内部的get set进行修改")]),t._v(" "),s("p",[t._v("问题：")]),t._v(" "),s("ul",[s("li",[t._v("Proxy只会代理对象的第一层,通过reactive实现")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断是否为object")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("track")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收集依赖")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归代理嵌套对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发更新")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发更新")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"vue2、vue3渲染器的diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2、vue3渲染器的diff算法"}},[t._v("#")]),t._v(" vue2、vue3渲染器的diff算法")]),t._v(" "),s("p",[s("strong",[t._v("diff算法：")])]),t._v(" "),s("ul",[s("li",[t._v("先同级比较，再比较子节点")]),t._v(" "),s("li",[t._v("先判断一方有子节点另一方没有的情况")]),t._v(" "),s("li",[t._v("节点移除")]),t._v(" "),s("li",[t._v("比较都有子节点的情况")]),t._v(" "),s("li",[t._v("递归比较子节点")])]),t._v(" "),s("p",[t._v("vue2：")]),t._v(" "),s("ul",[s("li",[t._v("双端比较，同时从新旧children的两端开始进行比较，节点相同，则更新，不同则比较子节点。时间复杂度O(n)")])]),t._v(" "),s("p",[t._v("vue3:")]),t._v(" "),s("ul",[s("li",[t._v("基于Map数据结构，可以更快地进行比较。查找节点时间复杂度O(1)")])]),t._v(" "),s("h2",{attrs:{id:"hash模式和history模式的实现原理-补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash模式和history模式的实现原理-补充"}},[t._v("#")]),t._v(" hash模式和history模式的实现原理（补充）")]),t._v(" "),s("p",[t._v("hash值的的变化，"),s("strong",[t._v("不会")]),t._v("导致浏览器向服务器发出请求。浏览器不发出请求，就不会刷新页面。前端路由器通过监听"),s("strong",[t._v("hashchange")]),t._v("监听hash发生了哪些变化，根据变化实现更新。")]),t._v(" "),s("p",[t._v("history模式的实现主要是依据pushState和replaceState两个api，监听"),s("strong",[t._v("url")]),t._v("来实现页面更新。URL路径变化会触发浏览器向服务器发送请求。")]),t._v(" "),s("p",[t._v("区别：")]),t._v(" "),s("ul",[s("li",[t._v("hash模式的url有“"),s("strong",[t._v("#")]),t._v("”，“"),s("strong",[t._v("#")]),t._v("”后面部分表示应用程序的路由路径；history没有")]),t._v(" "),s("li",[s("strong",[t._v("刷新页面时")]),t._v("hash模式可以正常加载页面。history没有处理的话，会返回404，它需要后端支持")]),t._v(" "),s("li",[s("strong",[t._v("兼容性上")]),t._v("，hash可以支持低版本浏览器和IE")])]),t._v(" "),s("h2",{attrs:{id:"vue-router路由钩子函数是什么-执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router路由钩子函数是什么-执行顺序"}},[t._v("#")]),t._v(" vue-router路由钩子函数是什么，执行顺序？")]),t._v(" "),s("p",[t._v("全局守卫、路由守卫、组件守卫")]),t._v(" "),s("ul",[s("li",[t._v("beforeEach:路由切换之前触发。"),s("strong",[t._v("检测用户是否登录。")])]),t._v(" "),s("li",[t._v("beforeResolve：路由切换"),s("strong",[t._v("完成前")]),t._v("触发。获取数据，确保所有数据都已经加载。")]),t._v(" "),s("li",[t._v("afterEach:路由切换后，"),s("strong",[t._v("执行一些全局操作")])]),t._v(" "),s("li",[t._v("beforeEnter:路由进入前，可以检测路由参数是否有效")]),t._v(" "),s("li",[t._v("beforeRouteUpdate：路由更新前，"),s("strong",[t._v("可以处理参数变化时需要更新的数据")]),t._v("，只会在当前组件复用时触发")]),t._v(" "),s("li",[t._v("beforeRouteLeave: 在路由离开之前触发")])]),t._v(" "),s("p",[t._v("完整的导航解析流程：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("导航触发")])]),t._v(" "),s("li",[s("p",[t._v("在失活的组件里调用 "),s("strong",[t._v("beforeRouterLeave")]),t._v(" 守卫√")])]),t._v(" "),s("li",[s("p",[t._v("调用全局的"),s("strong",[t._v("beforeEach")]),t._v("守卫√")])]),t._v(" "),s("li",[s("p",[t._v("在重用的组件之前调用"),s("strong",[t._v("beforeRouteUpdate")]),t._v("，同样是旧有的")])]),t._v(" "),s("li",[s("p",[t._v("路由配置里面调用"),s("strong",[t._v("beforeEnter")])])]),t._v(" "),s("li",[s("p",[t._v("解析异步路由组件")])]),t._v(" "),s("li",[s("p",[t._v("被激活的组件里调用"),s("strong",[t._v("beforeRouteEnter")]),t._v("√")])]),t._v(" "),s("li",[s("p",[t._v("调用全局的"),s("strong",[t._v("beforeResolve")]),t._v("√")])]),t._v(" "),s("li",[s("p",[t._v("导航被确认")])]),t._v(" "),s("li",[s("p",[t._v("调用全局"),s("strong",[t._v("afterEach√")])])]),t._v(" "),s("li",[s("p",[t._v("调用 beforeRouterEnter 守卫中传给 "),s("strong",[t._v("next")]),t._v(" 的回调函数，创建好的组件实例会作为回")]),t._v(" "),s("p",[t._v("调函数的参数传入")])])]),t._v(" "),s("h2",{attrs:{id:"vue-router动态路由是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router动态路由是什么"}},[t._v("#")]),t._v(" vue-router动态路由是什么？")]),t._v(" "),s("p",[t._v("需要把某种模式匹配到的所有路由，映射到一个组件。可以使用动态路径参数实现。"),s("strong",[t._v("路径参数用冒号：表示")]),t._v(",可以有多个路径参数，会映射到$route.params上的对应字段")]),t._v(" "),s("p",[t._v("组件复用导致路由参数失效怎么办？因为不会触发生命周期函数")]),t._v(" "),s("ul",[s("li",[t._v("通过watch监听路由参数，再发起请求")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" watch："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"router"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("用key来阻止复用")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('router-view :key="$route.fullPath"\n')])])]),s("h2",{attrs:{id:"对vuex的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对vuex的理解"}},[t._v("#")]),t._v(" 对vuex的理解")]),t._v(" "),s("p",[t._v("vuex是专门为vue开发的状态管理器，采用集中式存储管理应用中所有组件的状态。")]),t._v(" "),s("p",[t._v("组件创建或者销毁时，组件会被初始化，导致data也会被销毁。")]),t._v(" "),s("p",[t._v("主要模块：")]),t._v(" "),s("ul",[s("li",[t._v("State：定义了应用状态的数据结构，可以初始化默认状态")]),t._v(" "),s("li",[t._v("Getter:允许组件从store中获取数据，mapGetters辅助函数将state中的getter映射为"),s("strong",[t._v("局部计算属性")])]),t._v(" "),s("li",[t._v("Mutation：同步更改store")]),t._v(" "),s("li",[t._v("Action：用于提交mutation，可以异步进行")]),t._v(" "),s("li",[t._v("Module：允许将单一的Store拆分为多个store")])]),t._v(" "),s("h2",{attrs:{id:"vuex页面刷新丢失数据怎么解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex页面刷新丢失数据怎么解决"}},[t._v("#")]),t._v(" Vuex页面刷新丢失数据怎么解决？")]),t._v(" "),s("p",[t._v("需要做vuex"),s("strong",[t._v("数据持久化")]),t._v("，一般使用本地存储的方案。保存在cookie或者localStorage中")]),t._v(" "),s("p",[t._v("vuex-persist持久化插件")]),t._v(" "),s("h2",{attrs:{id:"vue中使用了哪些设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中使用了哪些设计模式"}},[t._v("#")]),t._v(" vue中使用了哪些设计模式？")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("观察者模式")]),t._v("：响应式数据原理")]),t._v(" "),s("li",[s("strong",[t._v("单例模式")]),t._v("：整个程序只有一个vue的根组件、vuex的store、vue-router的每个路由")]),t._v(" "),s("li",[s("strong",[t._v("发布订阅模式")]),t._v("：事件机制，多了消息代理和事件通道")]),t._v(" "),s("li",[t._v("装饰器模式：@装饰器的用法")]),t._v(" "),s("li",[t._v("策略模式：对象的行为在不同的场景有不同的实现方案")]),t._v(" "),s("li",[t._v("工厂模式：传入参数即可创建实例，虚拟")]),t._v(" "),s("li",[s("strong",[t._v("代理模式")]),t._v("：vue3的proxy")])]),t._v(" "),s("h2",{attrs:{id:"vue性能优化-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue性能优化-重点"}},[t._v("#")]),t._v(" Vue性能优化（重点）")]),t._v(" "),s("ul",[s("li",[t._v("对象层级"),s("strong",[t._v("不要过深")]),t._v("，否则影响性能、可读性和可维护性")]),t._v(" "),s("li",[s("strong",[t._v("不需要响应式的数据")]),t._v("不要放在data中，可以使用Object.freeze()冻结")]),t._v(" "),s("li",[t._v("v-if和v-show区分场景使用，v-if用于"),s("strong",[t._v("不经常切换的场景")]),t._v("，v-show适用于经常切换的场景")]),t._v(" "),s("li",[t._v("v-for 遍历必须加key，最好是id值，"),s("strong",[t._v("避免同时使用v-if")])]),t._v(" "),s("li",[t._v("computed和watch区分场景使用；computed适用于"),s("strong",[t._v("计算成本较高")]),t._v("的场景，例如"),s("strong",[t._v("数组排序、过滤")]),t._v("等；适用于需要在数据变化时"),s("strong",[t._v("执行异步操作或者开销较大的操作")]),t._v("时。")]),t._v(" "),s("li",[t._v("大数据列表和表格性能优化，虚拟列表，虚拟表格，"),s("strong",[t._v("渲染可视区域内的数据")]),t._v("。")]),t._v(" "),s("li",[t._v("防止内部泄露，组件销毁后把全局变量销毁，例如解除对"),s("strong",[t._v("window和document")]),t._v("的引用")]),t._v(" "),s("li",[t._v("图片懒加载，用户浏览到可视区域时再加载图片")]),t._v(" "),s("li",[t._v("路由懒加载，"),s("strong",[t._v("动态导入")]),t._v("const UserDetails = () => import('./views/UserDetails.vue')")]),t._v(" "),s("li",[t._v("第三方插件按需加载，tree-shaking机制")]),t._v(" "),s("li",[t._v("适当采用keep-alive缓存组件")]),t._v(" "),s("li",[t._v("防抖、节流的运用")]),t._v(" "),s("li",[t._v("服务端渲染SSR和预渲染")])]),t._v(" "),s("h2",{attrs:{id:"nexttick作用是什么-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick作用是什么-实现原理"}},[t._v("#")]),t._v(" nextTick作用是什么？实现原理？")]),t._v(" "),s("p",[t._v("vue更新DOM是异步更新的，数据变化，DOM更新不会马上完成。")]),t._v(" "),s("p",[t._v("nextTick能够在"),s("strong",[t._v("下一次DOM更新循环结束后执行回调函数")]),t._v("，以确保DOM已经被更新。")]),t._v(" "),s("p",[t._v("实现原理：宏任务和微任务(优先级较高)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Promise")]),t._v("：将函数延迟到函数调用栈最末端，"),s("strong",[t._v("微任务")])]),t._v(" "),s("li",[s("strong",[t._v("MutationObserver")]),t._v("：监听DOM节点变动，所有DOM变动完成之后，执行回调函数。")]),t._v(" "),s("li",[t._v("以上都不行则采用"),s("strong",[t._v("SetTimeout")]),t._v("把函数延迟到DOM更新之后再使用。"),s("strong",[t._v("宏任务")])])]),t._v(" "),s("p",[t._v("执行时机：")]),t._v(" "),s("ul",[s("li",[t._v("宏任务包括：script整体代码、setTimeout、setInterval、setImmediate、IO操作、UI渲染等")]),t._v(" "),s("li",[t._v("微任务包括：Promise.then()、Promise.catch()、Promise.finally()、MutationObserver等等")])]),t._v(" "),s("h2",{attrs:{id:"keep-alive使用场景和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive使用场景和原理"}},[t._v("#")]),t._v(" keep-alive使用场景和原理")]),t._v(" "),s("ul",[s("li",[t._v("keep-alive是vue的内置组件，用于缓存内部组件的实例。"),s("strong",[t._v("避免创建组件带来的开销，保留组件状态。")])]),t._v(" "),s("li",[t._v("keep-alive具有"),s("strong",[t._v("include")]),t._v("和"),s("strong",[t._v("exclude")]),t._v("属性，控制哪些组件进入缓存，设置max属性，当缓存实例超过该数时vue会移除最久没有使用的组件缓存。")]),t._v(" "),s("li",[t._v("具体的实现上，内部维护了一个"),s("strong",[t._v("key数组")]),t._v("和"),s("strong",[t._v("一个缓存对象")]),t._v("，key会自动生成。")]),t._v(" "),s("li",[t._v("keep-alive内部所有的嵌套组件都具有两个生命周期钩子函数，"),s("strong",[t._v("activated")]),t._v("在首次挂载和从缓存中获取时触发，"),s("strong",[t._v("deactivated")]),t._v("在从DOM移除进入缓存，以及组件卸载时触发")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 以英文逗号分隔的字符串 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("KeepAlive include"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a,b"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"view"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("KeepAlive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("正则表达式")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("需使用 "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("v-bind")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("KeepAlive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a|b/"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"view"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("KeepAlive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("数组")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("需使用 "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("v-bind")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("KeepAlive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"['a', 'b']\"")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"view"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("KeepAlive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a,b为组件名称 ")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"vue-set方法原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-set方法原理"}},[t._v("#")]),t._v(" Vue.set方法原理")]),t._v(" "),s("p",[t._v("两种情况下修改Vue不会触发视图更新：")]),t._v(" "),s("ol",[s("li",[t._v("实例创建后，给实例添加新的属性")]),t._v(" "),s("li",[t._v("直接更改数组下标修改数组的值")])]),t._v(" "),s("p",[t._v("Vue.set用于给响应式对象添加新的属性，以便能够响应式更新视图。对新的属性进行响应式跟踪，触发对象的dep收集到的watcher去更新")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 两种方式\nVue.set(object, propertyName, value)\nthis.$set(this.obj, 'key', value)\n")])])]),s("h2",{attrs:{id:"页面渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染"}},[t._v("#")]),t._v(" 页面渲染")]),t._v(" "),s("p",[t._v("每当一次事件循环结束之后，即一个宏任务执行完之后以及微任务队列被清空之后，浏览器就会进行一次更新渲染。")])])}),[],!1,null,null,null);s.default=r.exports}}]);