(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{354:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring单元测试"}},[t._v("#")]),t._v(" Spring单元测试")]),t._v(" "),s("h2",{attrs:{id:"junit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#junit"}},[t._v("#")]),t._v(" Junit")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("JUnit 是一种广泛使用的单元测试框架，用于在 Java 中编写和运行测试。JUnit 作为测试驱动开发（TDD）的重要工具，能够帮助开发者编写可重复执行的测试，确保代码的正确性和质量。它提供了注解、断言和运行器等功能，支持自动化测试的执行和结果验证。")]),t._v(" "),s("h3",{attrs:{id:"版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[t._v("#")]),t._v(" 版本")]),t._v(" "),s("p",[s("strong",[t._v("JUnit 3.x")]),t._v("：早期版本，基于继承的方式组织测试类和方法。")]),t._v(" "),s("p",[s("strong",[t._v("JUnit 4.x")]),t._v("：引入了注解机制，简化了测试的编写方式，并且可以直接继承 "),s("code",[t._v("TestCase")]),t._v(" 类。")]),t._v(" "),s("p",[s("strong",[t._v("JUnit 5.x")]),t._v("：是当前的版本，具有更强大的功能和更高的灵活性，支持模块化架构。JUnit 5 的核心由以下三部分组成：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("JUnit Platform")]),t._v("：提供了运行测试的基础设施。")]),t._v(" "),s("li",[s("strong",[t._v("JUnit Jupiter")]),t._v("：JUnit 5 的编程模型，提供新的注解和断言方法。")]),t._v(" "),s("li",[s("strong",[t._v("JUnit Vintage")]),t._v("：用于支持运行 JUnit 3 和 JUnit 4 的测试。")])]),t._v(" "),s("h3",{attrs:{id:"测试方法命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试方法命名"}},[t._v("#")]),t._v(" 测试方法命名")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("清晰、简洁")]),t._v("：方法名应清晰地描述测试的目标、条件和预期结果。")]),t._v(" "),s("li",[s("strong",[t._v("遵循一致性")]),t._v("：保持命名风格的一致性，便于团队成员理解和维护。")]),t._v(" "),s("li",[s("strong",[t._v("行为驱动开发（BDD）风格")]),t._v("：可以考虑使用 "),s("code",[t._v("given-when-then")]),t._v(" 风格命名，尤其是当测试涉及复杂的场景时。")])]),t._v(" "),s("h2",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("注解")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("@Test")])]),t._v(" "),s("td",[t._v("表示该方法是测试方法")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@ParameterizedTest")])]),t._v(" "),s("td",[t._v("参数化测试，需要配合参数源注解使用（如 "),s("code",[t._v("@ValueSource")]),t._v("、"),s("code",[t._v("@CsvSource")]),t._v("）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@RepeatedTest")])]),t._v(" "),s("td",[t._v("重复测试、验证一致性、模拟压力测试")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@TestFactory")])]),t._v(" "),s("td",[t._v("允许运行时根据逻辑生成一组动态的测试用例，批量测试")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@TestTemplate")])]),t._v(" "),s("td",[t._v("定义测试模板，需要实现"),s("code",[t._v("TestTemplateInvocationContextProvider")]),t._v(" 类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@TestClassOrder")])]),t._v(" "),s("td",[t._v("测试类执行顺序，有内置排序器，也可与实现了"),s("code",[t._v("ClassOrderer")]),t._v(" 接口的类一起使用")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@TestMethodOrder")])]),t._v(" "),s("td",[t._v("测试方法执行顺序，需要与实现了"),s("code",[t._v("MethodOrderer")]),t._v("接口的类一起使用")])]),t._v(" "),s("tr",[s("td",[t._v("@TestInstance")]),t._v(" "),s("td",[t._v("测试类的生命周期，每个方法一个测试实例，或每个类一个实例")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@DisplayName")])]),t._v(" "),s("td",[t._v("自定义显示名称，使得测试更容易理解")])]),t._v(" "),s("tr",[s("td",[t._v("@DisplayNameGeneration")]),t._v(" "),s("td",[t._v("为测试类中的所有测试方法自动生成显示名称")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@BeforeEach")])]),t._v(" "),s("td",[t._v("在每个测试方法执行之前运行的方法，初始化测试资源")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@AfterEach")])]),t._v(" "),s("td",[t._v("在每个测试方法执行之后运行的方法")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@BeforeAll")])]),t._v(" "),s("td",[t._v("在整个测试类中的所有测试方法执行之前运行的方法，初始化一次性资源")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@AfterAll")])]),t._v(" "),s("td",[t._v("在整个测试类中的所有测试方法执行之后运行的方法")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@Nested")])]),t._v(" "),s("td",[t._v("嵌套测试类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("@Disabled")])]),t._v(" "),s("td",[t._v("禁用测试方法或测试类，调试的时候使用")])]),t._v(" "),s("tr",[s("td",[t._v("@Tag")]),t._v(" "),s("td",[t._v("声明用于过滤测试的标签")])]),t._v(" "),s("tr",[s("td",[t._v("@AutoClose")]),t._v(" "),s("td",[t._v("自动关闭的资源")])]),t._v(" "),s("tr",[s("td",[t._v("@Timeout")]),t._v(" "),s("td",[t._v("定义超时限制")])]),t._v(" "),s("tr",[s("td",[t._v("@TempDir")]),t._v(" "),s("td",[t._v("自动创建临时目录")])]),t._v(" "),s("tr",[s("td",[t._v("@ExtendWith")]),t._v(" "),s("td",[t._v("用于扩展测试")])]),t._v(" "),s("tr",[s("td",[t._v("@RegisterExtension")]),t._v(" "),s("td",[t._v("实例化扩展")])])])]),t._v(" "),s("h2",{attrs:{id:"组合注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合注释"}},[t._v("#")]),t._v(" 组合注释")]),t._v(" "),s("p",[t._v("正常使用标签注解")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Tag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("自定义注解")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("METHOD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Tag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("简洁的使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FastTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"断言assert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断言assert"}},[t._v("#")]),t._v(" 断言Assert")]),t._v(" "),s("p",[t._v("JUnit 5 的断言类位于 "),s("code",[t._v("org.junit.jupiter.api.Assertions")]),t._v(" 包中，包含了许多有用的静态方法")]),t._v(" "),s("h3",{attrs:{id:"断言方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断言方法"}},[t._v("#")]),t._v(" 断言方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("断言方法")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("assertEquals")]),t._v(" "),s("td",[t._v("验证两个值是否相等")])]),t._v(" "),s("tr",[s("td",[t._v("assertNotEquals")]),t._v(" "),s("td",[t._v("验证两个值是否不相等")])]),t._v(" "),s("tr",[s("td",[t._v("assertTrue")]),t._v(" "),s("td",[t._v("验证条件是否为 "),s("code",[t._v("true")])])]),t._v(" "),s("tr",[s("td",[t._v("assertFalse")]),t._v(" "),s("td",[t._v("验证条件是否为 "),s("code",[t._v("false")])])]),t._v(" "),s("tr",[s("td",[t._v("assertNull")]),t._v(" "),s("td",[t._v("验证对象是否为 "),s("code",[t._v("null")])])]),t._v(" "),s("tr",[s("td",[t._v("assertNotNull")]),t._v(" "),s("td",[t._v("验证对象是否不为 "),s("code",[t._v("null")])])]),t._v(" "),s("tr",[s("td",[t._v("assertArrayEquals")]),t._v(" "),s("td",[t._v("验证两个数组是否相等")])]),t._v(" "),s("tr",[s("td",[t._v("assertThrows")]),t._v(" "),s("td",[t._v("验证是否抛出了特定类型的异常")])]),t._v(" "),s("tr",[s("td",[t._v("assertTimeout")]),t._v(" "),s("td",[t._v("验证操作是否在规定时间内完成")])]),t._v(" "),s("tr",[s("td",[t._v("assertAll")]),t._v(" "),s("td",[t._v("组合多个断言一起执行")])])])]),t._v(" "),s("h3",{attrs:{id:"第三方断言库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三方断言库"}},[t._v("#")]),t._v(" 第三方断言库")]),t._v(" "),s("p",[s("em",[t._v("例如")]),s("a",{attrs:{href:"https://assertj.github.io/doc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AssertJ"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://hamcrest.org/JavaHamcrest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hamcrest"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://truth.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Truth"),s("OutboundLink")],1),t._v("等")]),t._v(" "),s("h2",{attrs:{id:"假设assume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假设assume"}},[t._v("#")]),t._v(" 假设Assume")]),t._v(" "),s("p",[t._v("当继续执行给定测试没有意义时，可以使用假设，例如，测试依赖于当前运行环境不存在的东西。")]),t._v(" "),s("ul",[s("li",[t._v("假设有效时，假设方法不会引发异常，测试继续执行")]),t._v(" "),s("li",[t._v("假设无效是，会抛出类型异常org.opentest4j.TestAbortedException")])]),t._v(" "),s("p",[t._v("所有 JUnit Jupiter 假设都是"),s("code",[t._v("org.junit.jupiter.api.Assumptions")]),t._v("类中的静态方法")]),t._v(" "),s("h3",{attrs:{id:"假设方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假设方法"}},[t._v("#")]),t._v(" 假设方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("假设方法")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("assumeTrue")]),t._v(" "),s("td",[t._v("如果条件为True，继续执行，否则跳过测试")])]),t._v(" "),s("tr",[s("td",[t._v("assumeFalse")]),t._v(" "),s("td",[t._v("如果条件为False，继续执行，否则跳过测试")])]),t._v(" "),s("tr",[s("td",[t._v("assumeNotNull")]),t._v(" "),s("td",[t._v("如果对象不为null，继续执行，否则跳过测试")])]),t._v(" "),s("tr",[s("td",[t._v("assumeNull")]),t._v(" "),s("td",[t._v("如果对象为null，继续执行，否则跳过测试")])])])]),t._v(" "),s("h3",{attrs:{id:"和断言的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和断言的比较"}},[t._v("#")]),t._v(" 和断言的比较")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("假设：假设用于设定前提条件，确保测试在某些条件下才会执行如果条件不满足，测试会被"),s("strong",[t._v("跳过")]),t._v("，而不是失败")])]),t._v(" "),s("li",[s("p",[t._v("断言：断言用于验证实际结果与预警结果是否一致，如果不一致，测试会"),s("strong",[t._v("失败")])])])]),t._v(" "),s("h2",{attrs:{id:"测试执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试执行顺序"}},[t._v("#")]),t._v(" 测试执行顺序")]),t._v(" "),s("h3",{attrs:{id:"方法顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法顺序"}},[t._v("#")]),t._v(" 方法顺序")]),t._v(" "),s("p",[t._v("内置"),s("code",[t._v("MethodOrderer")]),t._v("实现：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("MethodOrderer.DisplayName")]),t._v("：根据显示名称"),s("em",[t._v("按字母顺序对")]),t._v("测试方法进行排序")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("MethodOrderer.MethodName")]),t._v("：根据测试方法的名称和形式参数列表"),s("em",[t._v("按字母顺序对其进行排序")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("MethodOrderer.OrderAnnotation")]),t._v("：根据通过注释指定的值按"),s("em",[t._v("数字方式对测试方法进行排序")]),s("code",[t._v("@Order")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("MethodOrderer.Random")]),s("em",[t._v("：以伪随机方式")]),t._v("排列测试方法，并支持配置自定义"),s("em",[t._v("种子")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("MethodOrderer.Alphanumeric")]),t._v("：根据测试方法的名称和形式参数列表*按字母顺序对其进行排序")]),t._v(" "),s("blockquote",[s("p",[t._v("已弃用，改为使用"),s("code",[t._v("MethodOrderer.MethodName")]),t._v("，将在 6.0 版中删除")])])])]),t._v(" "),s("h3",{attrs:{id:"类顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类顺序"}},[t._v("#")]),t._v(" 类顺序")]),t._v(" "),s("p",[t._v("内置"),s("code",[t._v("ClassOrderer")]),t._v("实现：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ClassOrderer.ClassName")]),t._v("：根据测试类的完全限定类名"),s("em",[t._v("按字母顺序对其进行排序")])]),t._v(" "),s("li",[s("code",[t._v("ClassOrderer.DisplayName")]),t._v("：根据显示名称的"),s("em",[t._v("字母数字顺序对")]),t._v("测试类进行排序（请参阅"),s("a",{attrs:{href:"https://junit.org/junit5/docs/current/user-guide/#writing-tests-display-name-generator-precedence-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("显示名称生成优先规则"),s("OutboundLink")],1),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("ClassOrderer.OrderAnnotation")]),t._v("：根据通过注释指定的值按"),s("em",[t._v("数字方式对测试类进行排序")]),s("code",[t._v("@Order")])]),t._v(" "),s("li",[s("code",[t._v("ClassOrderer.Random")]),s("em",[t._v("：伪随机排序")]),t._v("测试类并支持配置自定义"),s("em",[t._v("种子")])])]),t._v(" "),s("h2",{attrs:{id:"异常处理-补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理-补充"}},[t._v("#")]),t._v(" 异常处理（补充）")]),t._v(" "),s("h2",{attrs:{id:"参数化测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数化测试"}},[t._v("#")]),t._v(" 参数化测试")]),t._v(" "),s("p",[t._v("参数化测试允许使用不同的参数多次运行测试，此外必须至少声明一个数据源")]),t._v(" "),s("h3",{attrs:{id:"数据源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据源"}},[t._v("#")]),t._v(" 数据源")]),t._v(" "),s("h4",{attrs:{id:"valuesource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valuesource"}},[t._v("#")]),t._v(" @ValueSource")]),t._v(" "),s("p",[t._v("允许指定一个数组，每次为参数化测试调用提供一个参数")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ValueSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ints "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithValueSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" argument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("无效数据源和空源：")]),t._v(" "),s("h4",{attrs:{id:"enumsource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enumsource"}},[t._v("#")]),t._v(" @EnumSource")]),t._v(" "),s("p",[t._v("用于枚举类型的数据源，提供枚举类型的所有常量")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WINTER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SPRING")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SUMMER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FALL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnumSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用所有枚举常量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithEnumSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),t._v(" season"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("season"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"methodsource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methodsource"}},[t._v("#")]),t._v(" @MethodSource")]),t._v(" "),s("p",[t._v("指定一个返回流或者数组的静态方法，这个方法可以返回 "),s("code",[t._v("Stream")]),t._v("、"),s("code",[t._v("Collection")]),t._v("、"),s("code",[t._v("Iterable")]),t._v("、"),s("code",[t._v("Iterator")]),t._v(" 或数组")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MethodSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stringProvider"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithMethodSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" argument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stream")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cherry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"fieldsource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fieldsource"}},[t._v("#")]),t._v(" @FieldSource")]),t._v(" "),s("p",[t._v("引用测试类或外部类的一个或多个字段")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FieldSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"listOfFruits"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("singleFieldSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertFruit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" listOfFruits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"csvsource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csvsource"}},[t._v("#")]),t._v(" @CsvSource")]),t._v(" "),s("p",[t._v("用于提供csv格式的多个数据行，每一行数据对应测试方法的一个参数集，多个参数使用逗号分隔")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@CsvSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple, 1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana, 2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cherry, 3"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithCsvSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rank "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"csvfilesource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csvfilesource"}},[t._v("#")]),t._v(" @CsvFileSource")]),t._v(" "),s("p",[t._v("和@CsvSource类似，允许从CSV文件加载数据")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@CsvFileSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resources "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/testData.csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numLinesToSkip "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithCsvFileSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"argumentssource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argumentssource"}},[t._v("#")]),t._v(" @ArgumentsSource")]),t._v(" "),s("p",[t._v("用于指定一个实现了 "),s("code",[t._v("ArgumentsProvider")]),t._v(" 接口的类或方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomArgumentsProvider")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArgumentsProvider")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stream")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provideArguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExtensionContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arguments")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ParameterizedTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ArgumentsSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomArgumentsProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithArgumentsSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNotNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rank "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://junit.org/junit5/docs/current/user-guide/#writing-tests-meta-annotations",target:"_blank",rel:"noopener noreferrer"}},[t._v("Junit5官方文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/7268530145203240975?from=search-suggest#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金文章-怎么写好单元测试"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);