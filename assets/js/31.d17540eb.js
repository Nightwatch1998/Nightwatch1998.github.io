(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{315:function(e,n,t){"use strict";t.r(n);var a=t(10),s=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"nginx学习记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx学习记录"}},[e._v("#")]),e._v(" Nginx学习记录")]),e._v(" "),n("h2",{attrs:{id:"linux环境安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux环境安装"}},[e._v("#")]),e._v(" Linux环境安装")]),e._v(" "),n("h3",{attrs:{id:"debain安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debain安装"}},[e._v("#")]),e._v(" debain安装")]),e._v(" "),n("h4",{attrs:{id:"环境准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[e._v("#")]),e._v(" 环境准备")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("1. 更新软件包\nsudo apt-get update\n\n2. nginx需要gcc支持\nsudo apt-get install build-essential\n\n3. nginx需要正则表达式支持\nsudo apt-get install libpcre3 libpcre3-dev\n\n4. http需要gzip压缩\nsudo apt-get install zlib1g-dev\n\n5. SSL协议支持\nsudo apt-get install openssl libssl-dev\n")])])]),n("h4",{attrs:{id:"下载安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载安装"}},[e._v("#")]),e._v(" 下载安装")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('1. 下载nginx源码到当前目录\nwget "http://nginx.org/download/nginx-1.20.1.tar.gz"\n2. 将nginx解压到目标目录\ntar -zxvf /root/nginx-1.20.1.tar.gz -C ./\n3. 编译安装\ncd nginx-1.20.1\n默认配置\n./configure\nmake && make install\n')])])]),n("h4",{attrs:{id:"修改nginx的conf文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改nginx的conf文件"}},[e._v("#")]),e._v(" 修改nginx的conf文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\nuser  root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    # 开启gzip压缩\n    gzip on;\n    # 不压缩临界值，大于1K的才压缩，一般不用改\n    gzip_min_length 1k;\n    # 压缩缓冲区\n    gzip_buffers 16 64K;\n    # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 5;\n    # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    # 跟Squid等缓存服务有关，on的话会在Header里增加"Vary: Accept-Encoding"\n    gzip_vary on;\n    # IE6对Gzip不怎么友好，不给它Gzip了\n    gzip_disable "MSIE [1-6]\\.";\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            # root   E:/Coding/Learning2021/learning-projects/imooc-datav-report-dev/dist;\n            # root   E:/Coding/Projects2023/IENC-datav/datav;\n            root E:/03_Coding/Projects2024/Chs-Mission-Manage/ruoyi-ui/dist;\n            index  index.html index.htm;\n        }\n\n\t\t# 代理通向后端\n        location /prod-api/ {\n          proxy_set_header Host $http_host;\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header REMOTE-HOST $remote_addr;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_pass http://localhost:8080/;\n        }\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n\n')])])]),n("h4",{attrs:{id:"运行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[e._v("#")]),e._v(" 运行")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("1. 进入目录\ncd /usr/local/nginx/sbin\n2. 启动\n./nginx \n3. 关闭\n./nginx -s stop\n4. 重启\n./nginx -s reload\n")])])]),n("h4",{attrs:{id:"卸载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[e._v("#")]),e._v(" 卸载")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("# 卸载Nginx\nsudo apt-get remove nginx\n")])])]),n("h3",{attrs:{id:"设置开机自启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置开机自启动"}},[e._v("#")]),e._v(" 设置开机自启动")]),e._v(" "),n("p",[e._v("首先创建开机自启动脚本")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cd /etc/systemd/system\nvi nginx.service\n")])])]),n("p",[e._v("写入内容")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[Unit]\nDescription=nginx service\nAfter=network.target\n\n[Service]\nType=forking\nPIDFile=/usr/local/nginx/logs/nginx.pid  \nExecStartPre=/usr/local/nginx/sbin/nginx -t\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s quit\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n")])])]),n("p",[e._v("设置开机自启动")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("systemctl enable nginx\n")])])]),n("p",[e._v("停止开机自启动")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("systemctl disable nginx.service\n")])])]),n("h2",{attrs:{id:"nginx常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx常用命令"}},[e._v("#")]),e._v(" Nginx常用命令")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 关闭所有nginx进程\ntaskkill /f /t /im nginx.exe\n\n// 开启防火墙\nsudo apt-get install iptables\n")])])]),n("h2",{attrs:{id:"反向代理案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反向代理案例"}},[e._v("#")]),e._v(" 反向代理案例")]),e._v(" "),n("p",[e._v("geoserver屏蔽浏览器端对管理员界面的访问，只提供地图服务。")]),e._v(" "),n("h3",{attrs:{id:"方案一-推荐"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方案一-推荐"}},[e._v("#")]),e._v(" 方案一（推荐）")]),e._v(" "),n("p",[e._v("geoserver部署在8080端口，另起一个8081端口，地图服务代理到8081")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    server {\n        listen 8081;\n        server_name  test.com;\n\n        location /api {\n            proxy_pass http://127.0.0.1:8080/api;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        }\n    }\n")])])]),n("h3",{attrs:{id:"方案二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方案二"}},[e._v("#")]),e._v(" 方案二")]),e._v(" "),n("p",[e._v("把8080端口代理到8081，同时对管理员界面进行重定向，例如错误页面")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    server {\n        listen 8081;\n        server_name  test.com;\n\n        location / {\n            proxy_pass http://127.0.0.1:8080;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        }\n\n        location /geoserver/web {\n            rewrite ^/geoserver/web(/.*)?$ error.html permanent;\n        }\n    }\n")])])]),n("p",[e._v("或者可以直接和前端的代码写在一起")])])}),[],!1,null,null,null);n.default=s.exports}}]);