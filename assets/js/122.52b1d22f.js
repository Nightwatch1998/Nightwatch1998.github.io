(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{405:function(t,a,s){"use strict";s.r(a);var n=s(10),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"模型、视图、投影矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型、视图、投影矩阵"}},[t._v("#")]),t._v(" 模型、视图、投影矩阵")]),t._v(" "),a("p",[t._v("各种矩阵用途：")]),t._v(" "),a("ul",[a("li",[t._v("模型矩阵：获取原始模型数据，并在3D世界空间移动。")]),t._v(" "),a("li",[t._v("投影矩阵：将世界空间坐标转换为裁剪空间坐标。模拟相机的效果。")]),t._v(" "),a("li",[t._v("视图矩阵：负责移动场景中的对象以模拟相机位置的变化。改变观察者当前能够看到的内容。")])]),t._v(" "),a("h3",{attrs:{id:"裁剪空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#裁剪空间"}},[t._v("#")]),t._v(" 裁剪空间")]),t._v(" "),a("p",[t._v("这是一个中心点位于 (0, 0, 0)，角落范围在 (-1, -1, -1) 到 (1, 1, 1) 之间，2 个单位宽的立方体。该剪裁空间被压缩到一个二维空间并栅格化为图像（可以理解为投影）。")]),t._v(" "),a("p",[t._v("顶点着色器将点转换到裁剪空间的特殊坐标系上。")]),t._v(" "),a("p",[t._v("裁剪空间内的坐标为归一化坐标。只有裁剪空间内的元素才会被渲染。")]),t._v(" "),a("p",[t._v("裁剪空间中z+远离观察者")]),t._v(" "),a("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_model_view_projection/clip_space_graph.svg",alt:"A 3d graph showing clip space in WebGL."}}),t._v(" "),a("h3",{attrs:{id:"齐次坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#齐次坐标"}},[t._v("#")]),t._v(" 齐次坐标")]),t._v(" "),a("p",[t._v("(x,y,z)增加第四个坐标(x,y,z,w)变为齐次坐标，w作为其他分量的除数。将透视的概念引入坐标系，允许两条平行线在延伸到远方时相交。")]),t._v(" "),a("h3",{attrs:{id:"模型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型转换"}},[t._v("#")]),t._v(" 模型转换")]),t._v(" "),a("p",[t._v("将模型数据和其他坐标转换到裁剪空间。")]),t._v(" "),a("p",[t._v("例如立方体表面颜色和构成单个多边形的顶点位置顺序组成。这些位置和颜色存储在GL缓冲区，分发到着色器分别进行操作。")]),t._v(" "),a("p",[t._v("计算单个模型矩阵。该矩阵表示要在组成模型的每个点上执行转换。")]),t._v(" "),a("h3",{attrs:{id:"除以w"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#除以w"}},[t._v("#")]),t._v(" 除以W")]),t._v(" "),a("p",[t._v("获取立方体模型透视的简单方法，将Z坐标复制到W上，w可以描述透视。")]),t._v(" "),a("h3",{attrs:{id:"简单投影"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单投影"}},[t._v("#")]),t._v(" 简单投影")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 单位阵\nvar identity = [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1,\n];\n\nMDN.multiplyPoint(identity, [2, 3, 4, 1]);\n//> [2, 3, 4, 1]\n\n// 移动一格\nvar copyZ = [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 1,\n  0, 0, 0, 0,\n];\n\nMDN.multiplyPoint(copyZ, [2, 3, 4, 1]);\n//> [2, 3, 4, 4]\n\n// 缩放因子\nvar scaleFactor = 0.5;\n\nvar simpleProjection = [\n  1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, scaleFactor,\n  0, 0, 0, scaleFactor,\n];\n\nMDN.multiplyPoint(simpleProjection, [2, 3, 4, 1]);\n//> [2, 3, 4, 2.5]\n")])])]),a("p",[t._v("通过scaleFactor，可以控制投影的远近程度：")]),t._v(" "),a("div",{staticClass:"language-GLSL extra-class"},[a("pre",{pre:!0,attrs:{class:"language-glsl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保以相反的顺序读取转换矩阵")]),t._v("\ngl_Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" projection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"透视矩阵-推导下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透视矩阵-推导下"}},[t._v("#")]),t._v(" 透视矩阵（推导下）")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.songho.ca/opengl/gl_projectionmatrix.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenGL透视投影"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("透视投影将视椎体映射为立方体。")]),t._v(" "),a("p",[t._v("已知信息：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("假设相机位置位于原点，t、b、l、r分别位于视椎体近面上下左右四条边的y、y、x、x坐标,n为近面z坐标，f为远面坐标。")])]),t._v(" "),a("li",[a("p",[t._v("标准化设备（NDC）坐标：(-1,-1,-1)到(1,1,1)")])])]),t._v(" "),a("p",[t._v("是由数学公式推导出来的：")]),t._v(" "),a("ul",[a("li",[t._v("首先，将视椎体的视野坐标Xe,Ye投影到近裁剪面Xp,Yp")]),t._v(" "),a("li",[t._v("由于视野坐标是右手坐标系，NDC为左手坐标系，所以Z要反向，Wc可定义为-Ze，"),a("strong",[t._v("矩阵第四行确定")]),t._v("。")]),t._v(" "),a("li",[t._v("将投影坐标Xp,Yp线性变换为NDC近平面坐标Xn,Yn")]),t._v(" "),a("li",[t._v("然后得到Xn与Xe,Ze，Yn与Ye,Ze的推算关系，"),a("strong",[t._v("确定矩阵的前两行")])]),t._v(" "),a("li",[t._v("计算矩阵第四行")])]),t._v(" "),a("div",{staticClass:"language-GLSL extra-class"},[a("pre",{pre:!0,attrs:{class:"language-glsl"}},[a("code",[t._v("MDN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perspectiveMatrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fieldOfViewInRadians"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" aspectRatio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" near"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" far"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  var f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fieldOfViewInRadians "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  var rangeInv "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("near "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" far"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" aspectRatio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("near "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" far"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rangeInv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  near "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" far "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rangeInv "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"视图矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图矩阵"}},[t._v("#")]),t._v(" 视图矩阵")]),t._v(" "),a("h2",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),a("h3",{attrs:{id:"着色器程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#着色器程序"}},[t._v("#")]),t._v(" 着色器程序")]),t._v(" "),a("h4",{attrs:{id:"顶点着色器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶点着色器"}},[t._v("#")]),t._v(" 顶点着色器")]),t._v(" "),a("p",[t._v("用于处理每个顶点的属性和位置信息。")]),t._v(" "),a("p",[t._v("可以定义顶点的位置、颜色、纹理属性，以及模型矩阵、投影矩阵等等。")]),t._v(" "),a("h4",{attrs:{id:"片段着色器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#片段着色器"}},[t._v("#")]),t._v(" 片段着色器")]),t._v(" "),a("p",[t._v("顶点着色器处理完图形的顶点后，会被将绘制图形的每个像素点调用一次。用于确定像素的颜色。")]),t._v(" "),a("p",[t._v("指定应用到像素的纹理元素，获取纹理元素的颜色，然后将适当的光照应用于颜色。颜色存储在gl_FragColor中。")]),t._v(" "),a("h3",{attrs:{id:"uniform变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uniform变量"}},[t._v("#")]),t._v(" uniform变量")]),t._v(" "),a("p",[t._v("类似于JS的全局变量，用于在顶点着色器和片段着色器中传递数据，例如：")]),t._v(" "),a("ul",[a("li",[t._v("变换矩阵")]),t._v(" "),a("li",[t._v("光照属性")]),t._v(" "),a("li",[t._v("纹理对象")])]),t._v(" "),a("h3",{attrs:{id:"缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区"}},[t._v("#")]),t._v(" 缓冲区")]),t._v(" "),a("p",[t._v("WebGL中，不同的缓冲区存储不同类型的数据。常用的缓冲区类型如下：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("顶点缓冲区")]),t._v("：存储顶点数据，顶点位置、法线、颜色和纹理坐标")]),t._v(" "),a("li",[a("strong",[t._v("索引缓冲区")]),t._v("：也称为元素缓冲区，用于存储顶点索引数据，指定如何连接顶点以形成图元")]),t._v(" "),a("li",[t._v("像素缓冲区：用于高效读取和写入像素数据，例如离屏渲染、渲染到纹理等等")]),t._v(" "),a("li",[t._v("帧缓冲区：用于渲染到纹理和离屏渲染")])]),t._v(" "),a("h3",{attrs:{id:"纹理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纹理"}},[t._v("#")]),t._v(" 纹理")]),t._v(" "),a("p",[t._v("纹理单元：存储纹理对象的容器，每个纹理单元可以绑定一个纹理对象。")]),t._v(" "),a("p",[t._v("纹理采样器：在着色器中用于访问纹理数据的特殊类型。可以根据纹理坐标从纹理对象中获取对应位置的纹理像素值。")]),t._v(" "),a("h3",{attrs:{id:"光照"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#光照"}},[t._v("#")]),t._v(" 光照")]),t._v(" "),a("p",[t._v("光源类型：")]),t._v(" "),a("ul",[a("li",[t._v("环境光：均匀地照射物体的每一个面")]),t._v(" "),a("li",[t._v("方向光：是一束从固定方向照射过来的光")]),t._v(" "),a("li",[t._v("点光源：光线从一个点发射，向四面八方发射")])]),t._v(" "),a("p",[t._v("法线矩阵将顶点法线从世界坐标系转换到视图坐标系。")]),t._v(" "),a("p",[t._v("法线矩阵计算步骤：")]),t._v(" "),a("ol",[a("li",[t._v("获取模型视图矩阵：它包括了物体的平移、旋转和缩放")]),t._v(" "),a("li",[t._v("计算法线矩阵：法线矩阵是模型视图矩阵的逆矩阵的转置")]),t._v(" "),a("li",[t._v("将法线矩阵传递给着色器")])]),t._v(" "),a("h3",{attrs:{id:"动画纹理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画纹理"}},[t._v("#")]),t._v(" 动画纹理")]),t._v(" "),a("p",[t._v("用视频帧作为纹理")])])}),[],!1,null,null,null);a.default=r.exports}}]);